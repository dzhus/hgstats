-*- mode: org -*-

* PIPESPEC syntax
  PIPESPEC describes a sequence of filters to be applied to
  repositories.

** Rationale
   PIPESPEC syntax must meet the following requirements:
   
   - we want to easily write pipespecs by hand;
   - parsing must be simple;
   - do not allow anything tricky;
   - don't collide with shell syntax conventions.
     
** Current version
   Dash-separated list of filters sets the order of filter
   application. When just filter name is used, it's implied that the
   result of pipe-spec part to the left of dash is used for `stream`
   argument of filter. RepoStream for current repository is used for
   the first filter.

   : DiffstatFilter-AccFilter,

   The expression above roughly expands to:

   : AccFilter(DiffstatFilter(RepoStream(repo)))

   Additional filter arguments are specified just like in function
   calls but with `stream` argument omitted (because it's [[implied]]).
   Only numeric, string or boolean (True/False) values are allowed
   (don't be [[tricky]]).
   
   : DiffstatFilter(True)-GroupingFilter(15,30)-AccFilter

   expands to

   : AccFilter(GroupingFilter(DiffstatFilter(RepoStream(repo), True), 15, 30))

* CLI

** DONE --output option
   CLOSED: [2009-08-16 Вск 13:22]
   
   | Value  | Method used for output       |
   | print  | file:output.py::PrintOutput  |
   | gchart | file:output.py::GchartOutput |
   | file   | file:output.py::FileOutput   |

** DONE Implement [[PIPESPEC]] parsing
   CLOSED: [2009-08-14 Птн 19:59]


* TODO Type checking
  Our filter types heirarchy is not flexible enough.

  AccFilter does not in fact produce a `StatStream`, but a stream of
  the same type as was used for filter input. Due to `AccFilter` being
  currently inherited from `StatStream`, it's impossible to apply a
  `TagsFilter` after it. Inheriting `AccFilter` from `RepoStream`
  would be wrong as well.
